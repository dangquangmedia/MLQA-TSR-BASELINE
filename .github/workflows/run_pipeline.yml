name: Run MLQA-TSR Pipeline

on:
  workflow_dispatch:
    inputs:
      split:
        description: "Chọn tập dữ liệu"
        required: true
        default: "public_task1"
        type: choice
        options: [train, public_task1, public_task2]
  push:
    branches: [ "main" ]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download dataset (from secret URL)
        env:
          DATASET_URL: ${{ secrets.DATASET_URL }}
        run: |
          mkdir -p data_zip
          if [ -z "$DATASET_URL" ]; then
            echo "❌ DATASET_URL secret is missing"; exit 1
          fi
          echo "Downloading dataset..."
          curl -L "$DATASET_URL" -o "data_zip/dataset.zip"
          ls -lh data_zip

      - name: Run pipeline
        run: |
          python scripts/predict.py \
            --dataset-zip "data_zip/dataset.zip" \
            --split "${{ github.event.inputs.split || 'public_task1' }}"

      - name: Show outputs
        run: |
          echo "=== outputs/ ==="
          ls -lh outputs || true
          echo "=== Preview (head) ==="
          if [ -f outputs/submission_task1.json ]; then head -n 50 outputs/submission_task1.json; fi
          if [ -f outputs/submission_task2.json ]; then head -n 50 outputs/submission_task2.json; fi

      - name: Upload artifact (submission.zip & json)
        uses: actions/upload-artifact@v4
        with:
          name: submission-${{ github.event.inputs.split || 'public_task1' }}
          path: |
            outputs/submission.zip
            outputs/submission_task1.json
            outputs/submission_task2.json
          if-no-files-found: warn
